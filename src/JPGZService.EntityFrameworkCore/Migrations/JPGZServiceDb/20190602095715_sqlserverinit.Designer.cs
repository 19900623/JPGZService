// <auto-generated />
using System;
using JPGZService.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JPGZService.Migrations.JPGZServiceDb
{
    [DbContext(typeof(JPGZServiceDbContext))]
    [Migration("20190602095715_sqlserverinit")]
    partial class sqlserverinit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JPGZService.Account.UserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account");

                    b.Property<string>("Address");

                    b.Property<DateTime?>("Createtime");

                    b.Property<string>("DriveTypeName");

                    b.Property<string>("IDCardNo");

                    b.Property<string>("Name");

                    b.Property<string>("OpenId");

                    b.Property<string>("Password");

                    b.Property<string>("Pic");

                    b.Property<int?>("Sex");

                    b.Property<int?>("StudentId");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("tb_StudentAccount");
                });

            modelBuilder.Entity("JPGZService.AppointmentDetails.AppointmentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppNo");

                    b.Property<int?>("AppStatus");

                    b.Property<double?>("CourseDiscount");

                    b.Property<int?>("CourseID");

                    b.Property<int?>("CourseLevel");

                    b.Property<string>("CourseNo");

                    b.Property<decimal?>("CoursePrice");

                    b.Property<int?>("CourseType");

                    b.Property<DateTime?>("CreateDateTime");

                    b.Property<string>("DrivingType");

                    b.Property<int?>("EvalClass");

                    b.Property<string>("EvalContent");

                    b.Property<DateTime?>("EvalDateTime");

                    b.Property<int?>("EvalStatus");

                    b.Property<int?>("IsAbsenteeism");

                    b.Property<int?>("IsCheckout");

                    b.Property<decimal?>("PayMoney");

                    b.Property<int?>("PayPath");

                    b.Property<int?>("PayType");

                    b.Property<string>("Remark");

                    b.Property<int?>("ReviewStatus");

                    b.Property<int?>("StuID");

                    b.Property<int?>("TeacherID");

                    b.Property<int?>("VehicleLevel");

                    b.HasKey("Id");

                    b.ToTable("Tb_AppointmentDetail");
                });

            modelBuilder.Entity("JPGZService.BranchSchools.BranchSchool", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<int?>("AdmissionsSiteNum");

                    b.Property<string>("BName");

                    b.Property<string>("Contact");

                    b.Property<bool?>("DeleteMark");

                    b.Property<string>("District");

                    b.Property<int?>("DriveSchoolId");

                    b.Property<string>("Introduction");

                    b.Property<string>("Latitude");

                    b.Property<string>("Longitude");

                    b.Property<string>("Name");

                    b.Property<DateTime?>("OpenDate");

                    b.Property<string>("Phone");

                    b.Property<string>("Photo");

                    b.Property<string>("PhotoAlbum");

                    b.Property<int?>("TechSiteNum");

                    b.Property<int?>("Type");

                    b.HasKey("Id");

                    b.ToTable("Tb_BranchSchool");
                });

            modelBuilder.Entity("JPGZService.ChargeDatas.ChargeData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuditStatus");

                    b.Property<DateTime?>("AuditTime");

                    b.Property<int?>("AuditUserId");

                    b.Property<decimal?>("ChargeMoney");

                    b.Property<int?>("ChargeStatus");

                    b.Property<DateTime?>("ChargeTime");

                    b.Property<int?>("ChargeType");

                    b.Property<int?>("ChargeUserId");

                    b.Property<DateTime?>("CreateTime");

                    b.Property<int?>("CreateUserId");

                    b.Property<DateTime?>("PaymentDate");

                    b.Property<string>("Remark");

                    b.Property<int?>("StudentId");

                    b.HasKey("Id");

                    b.ToTable("tb_ChargeData");
                });

            modelBuilder.Entity("JPGZService.ClassAddtions.ClassAddtion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChargeDescribe");

                    b.Property<int?>("ChargePattern");

                    b.Property<int>("ClassId");

                    b.Property<double?>("Part1Hours");

                    b.Property<decimal?>("Part1PreMoney");

                    b.Property<double?>("Part2Hours");

                    b.Property<decimal?>("Part2PreMoney");

                    b.Property<double?>("Part3Hours");

                    b.Property<decimal?>("Part3PreMoney");

                    b.Property<double?>("Part4Hours");

                    b.Property<decimal?>("Part4PreMoney");

                    b.Property<int?>("PayMentPattern");

                    b.Property<decimal?>("StandardPrice");

                    b.Property<int?>("TrainPattern");

                    b.HasKey("Id");

                    b.ToTable("Tb_ClassAddtion");
                });

            modelBuilder.Entity("JPGZService.ClassInfos.ClassInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActiveStatus");

                    b.Property<DateTime?>("ActiveTime");

                    b.Property<string>("Applicatnotes");

                    b.Property<int>("BranchSchoolId");

                    b.Property<string>("CancelActiveUser");

                    b.Property<DateTime?>("CancelTime");

                    b.Property<int?>("CarType");

                    b.Property<string>("CarTypeName");

                    b.Property<string>("ClassAlbum");

                    b.Property<string>("ClassIntro");

                    b.Property<string>("ClassLable");

                    b.Property<string>("ClassName");

                    b.Property<DateTime?>("CreateTime");

                    b.Property<string>("CreateUserName");

                    b.Property<int>("DriveSchoolId");

                    b.Property<int?>("IsDelete");

                    b.Property<string>("Propagslogan");

                    b.Property<string>("ServiceExplain");

                    b.Property<int?>("UploadStatus");

                    b.Property<string>("seq");

                    b.Property<DateTime?>("uptime");

                    b.HasKey("Id");

                    b.ToTable("Tb_ClassInfo");
                });

            modelBuilder.Entity("JPGZService.CoachRankingss.CoachRankings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<int?>("Average");

                    b.Property<string>("BAddress");

                    b.Property<int?>("BadTotal");

                    b.Property<string>("Bname");

                    b.Property<int?>("CoachRole");

                    b.Property<bool?>("DeleteMark");

                    b.Property<string>("Description");

                    b.Property<int?>("DriveSchoolId");

                    b.Property<int?>("Employstatus");

                    b.Property<int?>("MothRegistrationTotal");

                    b.Property<string>("Name");

                    b.Property<int?>("PraiseTotal");

                    b.Property<string>("RegionNo");

                    b.Property<int?>("RegistrationTotal");

                    b.Property<decimal?>("StandardPrice");

                    b.Property<string>("TeachYear");

                    b.Property<string>("TeacherName");

                    b.Property<string>("TechPic");

                    b.Property<int?>("TotalReview");

                    b.Property<int?>("TrainingStatus");

                    b.Property<int?>("UploadStatus");

                    b.Property<string>("UrbanCode");

                    b.HasKey("Id");

                    b.ToTable("V_CoachRankings");
                });

            modelBuilder.Entity("JPGZService.Complaints.Complaint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Cdate");

                    b.Property<string>("Content");

                    b.Property<string>("Depaopinion");

                    b.Property<DateTime?>("HandleDate");

                    b.Property<int?>("HandleStatus");

                    b.Property<int>("Objenum");

                    b.Property<int?>("ReceptionUser");

                    b.Property<string>("Schopinion");

                    b.Property<int>("StudentId");

                    b.Property<int>("Type");

                    b.Property<int?>("UploadStatus");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.ToTable("tb_Complaint");
                });

            modelBuilder.Entity("JPGZService.ConfigFirsts.ConfigFirst", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("DeleteMark");

                    b.Property<int>("FirstID");

                    b.Property<string>("FirstMark");

                    b.Property<string>("FirstName");

                    b.Property<DateTime?>("Ldate");

                    b.Property<int>("UserID");

                    b.HasKey("Id");

                    b.ToTable("tb_ConfigFirst");
                });

            modelBuilder.Entity("JPGZService.ConfigSeconds.ConfigSecond", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("DeleteMark");

                    b.Property<int?>("FirstID");

                    b.Property<DateTime?>("Ldate");

                    b.Property<int>("SecondID");

                    b.Property<string>("SecondMark");

                    b.Property<string>("SecondName");

                    b.Property<int>("SecondOrder");

                    b.Property<int>("UserID");

                    b.HasKey("Id");

                    b.ToTable("tb_ConfigSecond");
                });

            modelBuilder.Entity("JPGZService.DriveSchools.DriveSchool", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AddTime");

                    b.Property<int?>("AddUserId");

                    b.Property<string>("Address");

                    b.Property<string>("BName");

                    b.Property<string>("BusinessNo");

                    b.Property<int?>("ClassLevel");

                    b.Property<decimal>("Classroom");

                    b.Property<int>("Coachnumber");

                    b.Property<int?>("ConsultNum");

                    b.Property<string>("Creditcode");

                    b.Property<bool?>("DeleteMark");

                    b.Property<string>("Description");

                    b.Property<string>("District");

                    b.Property<string>("DriveSchoolNo");

                    b.Property<int?>("FirstHalfYear");

                    b.Property<int?>("Gpsid");

                    b.Property<int>("Grasupvnum");

                    b.Property<int?>("ICCardCount");

                    b.Property<string>("Inscode");

                    b.Property<bool>("IsShowLegalManSeal");

                    b.Property<int>("IsSubjectThree");

                    b.Property<int>("IsSubjectTwo");

                    b.Property<bool>("IsUpLoadStuPic");

                    b.Property<bool>("IsUpLoadTeacherPic");

                    b.Property<string>("Landline");

                    b.Property<decimal?>("Latitude");

                    b.Property<string>("LegalMan");

                    b.Property<string>("Lesence");

                    b.Property<DateTime?>("Licetime");

                    b.Property<decimal?>("Longitude");

                    b.Property<int?>("MinCarNum");

                    b.Property<string>("Mobilephone");

                    b.Property<string>("Name");

                    b.Property<int>("OrganizeID");

                    b.Property<string>("Photo");

                    b.Property<string>("PhotoAlbum");

                    b.Property<string>("Postcode");

                    b.Property<decimal>("Praticefield");

                    b.Property<string>("RegionNo");

                    b.Property<int>("Safmngnum");

                    b.Property<int?>("SecondHalfYear");

                    b.Property<int>("Status");

                    b.Property<string>("TechType");

                    b.Property<string>("TechTypeName");

                    b.Property<decimal>("Thclassroom");

                    b.Property<int>("Tracarnum");

                    b.Property<int?>("TrafficId");

                    b.Property<string>("TrainUnitSigner");

                    b.Property<int>("UploadStatus");

                    b.Property<string>("UrbanCode");

                    b.HasKey("Id");

                    b.ToTable("tb_DriveSchool");
                });

            modelBuilder.Entity("JPGZService.Evaluations.Evaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Evalobject");

                    b.Property<DateTime?>("Evaluatetime");

                    b.Property<int>("Overall");

                    b.Property<int>("Part");

                    b.Property<string>("Srvmanner");

                    b.Property<string>("StudentId");

                    b.Property<string>("Teachlevel");

                    b.Property<int>("Type");

                    b.Property<int?>("UploadStatus");

                    b.HasKey("Id");

                    b.ToTable("tb_Evaluation");
                });

            modelBuilder.Entity("JPGZService.ExamRecords.ExamRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ExamTime");

                    b.Property<int?>("Score");

                    b.Property<int?>("Subject");

                    b.Property<string>("TrainType");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.ToTable("tb_Exam_Record");
                });

            modelBuilder.Entity("JPGZService.Feedback.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contact");

                    b.Property<DateTime?>("CreateTime");

                    b.Property<int?>("DataType");

                    b.Property<int?>("DriverId");

                    b.Property<string>("FContent");

                    b.Property<string>("HandleIdea");

                    b.Property<int?>("HandleState");

                    b.Property<DateTime?>("HandleTime");

                    b.Property<int>("Overall");

                    b.Property<int?>("RegisteredID");

                    b.Property<int?>("StuId");

                    b.Property<string>("Title");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.ToTable("tb_Feedback");
                });

            modelBuilder.Entity("JPGZService.FindDrivingSchools.FindDrivingSchool", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<decimal?>("Latitude");

                    b.Property<decimal?>("Longitude");

                    b.Property<string>("Name");

                    b.Property<string>("Photo");

                    b.Property<int?>("SNum");

                    b.Property<int?>("Score");

                    b.Property<decimal?>("StandardPrice");

                    b.Property<string>("UrbanCode");

                    b.HasKey("Id");

                    b.ToTable("V_FindDrivingSchool");
                });

            modelBuilder.Entity("JPGZService.GetQuestion.PpaperGenerating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime");

                    b.Property<int>("JudgmentCount");

                    b.Property<int>("JudgmentFraction");

                    b.Property<int>("MCCount");

                    b.Property<int>("MCFraction");

                    b.Property<int>("MCQCount");

                    b.Property<int>("MCQFraction");

                    b.Property<int>("PageDuration");

                    b.Property<string>("PgCreateUser");

                    b.Property<string>("PgName");

                    b.Property<int>("Subject");

                    b.Property<int>("TrainIsPassFration");

                    b.HasKey("Id");

                    b.ToTable("tb_PaperGenerating");
                });

            modelBuilder.Entity("JPGZService.GetQuestion.QuestionInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AddTime");

                    b.Property<string>("Author");

                    b.Property<int?>("CurriculumId");

                    b.Property<string>("FilePath");

                    b.Property<int?>("FileType");

                    b.Property<int?>("IsDelete");

                    b.Property<int?>("KnowledgeType");

                    b.Property<string>("QuesTitle");

                    b.Property<int?>("QuesType");

                    b.HasKey("Id");

                    b.ToTable("tb_Questions");
                });

            modelBuilder.Entity("JPGZService.GetQuestion.Questions_AnswerCount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnswerCount");

                    b.Property<int>("ErrorCount");

                    b.Property<int>("QuestionId");

                    b.HasKey("Id");

                    b.ToTable("tb_Questions_AnswerCount");
                });

            modelBuilder.Entity("JPGZService.GetQuestion.Questions_ErrorCount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AnswerTime");

                    b.Property<int>("AnswerUer");

                    b.Property<int>("QuestionId");

                    b.HasKey("Id");

                    b.ToTable("tb_Questions_ErrorCount");
                });

            modelBuilder.Entity("JPGZService.News.New", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Cdate");

                    b.Property<string>("CoverPicture");

                    b.Property<int?>("DataOrganizeID");

                    b.Property<bool?>("IsDelete");

                    b.Property<int>("IsPublish");

                    b.Property<bool?>("IsTopping");

                    b.Property<string>("Nattachment");

                    b.Property<string>("Ncontent");

                    b.Property<int?>("NewObject");

                    b.Property<string>("Ntitle");

                    b.Property<int?>("Ntype");

                    b.Property<string>("SysNattachment");

                    b.Property<int?>("UserID");

                    b.Property<int?>("UserType");

                    b.HasKey("Id");

                    b.ToTable("tb_News");
                });

            modelBuilder.Entity("JPGZService.Organizes.Organize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<int?>("CorrespondingId");

                    b.Property<bool?>("DeleteMark");

                    b.Property<string>("Description");

                    b.Property<bool>("Enabled");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentID");

                    b.Property<int>("Sort");

                    b.Property<string>("TableName");

                    b.Property<int?>("gpsid");

                    b.Property<int?>("levelNum");

                    b.HasKey("Id");

                    b.ToTable("tb_Organize");
                });

            modelBuilder.Entity("JPGZService.PreRegistrations.PreRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClassInfoId");

                    b.Property<DateTime?>("CreateTime");

                    b.Property<int?>("HouseholdType");

                    b.Property<string>("IdCardNo");

                    b.Property<string>("Mobilephone");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Remark");

                    b.Property<int?>("Status");

                    b.Property<int?>("TeacherId");

                    b.HasKey("Id");

                    b.ToTable("tb_PreRegistration");
                });

            modelBuilder.Entity("JPGZService.QuestionsCollects.QuestionsCollect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CollectTime");

                    b.Property<int?>("CollectUer");

                    b.Property<int?>("QuestionId");

                    b.HasKey("Id");

                    b.ToTable("tb_Questions_Collect");
                });

            modelBuilder.Entity("JPGZService.RegisterRelations.RegisterRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Applicant");

                    b.Property<int?>("ApplicationDrivingSchoolId");

                    b.Property<int?>("ApplicationQuantity");

                    b.Property<int?>("ApplicationState");

                    b.Property<DateTime?>("ApplicationTime");

                    b.Property<DateTime?>("ApprovalTime");

                    b.Property<int?>("Approver");

                    b.Property<string>("OrderCode");

                    b.HasKey("Id");

                    b.ToTable("tb_RegisterRelation");
                });

            modelBuilder.Entity("JPGZService.RegistrationCodes.RegistrationCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApplicationRecordId");

                    b.Property<DateTime?>("ApplicationTime");

                    b.Property<int?>("BoundDrivingSchoolId");

                    b.Property<int?>("BoundStudentId");

                    b.Property<DateTime?>("BoundTime");

                    b.Property<string>("CodeKey");

                    b.Property<string>("RegistrationNumber");

                    b.Property<int?>("UseState");

                    b.HasKey("Id");

                    b.ToTable("tb_RegistrationCode");
                });

            modelBuilder.Entity("JPGZService.ReleaseCourses.ReleaseCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppointmentCount");

                    b.Property<DateTime?>("CourseBeginDateTime");

                    b.Property<string>("CourseContent");

                    b.Property<DateTime?>("CourseDate");

                    b.Property<double?>("CourseDiscount");

                    b.Property<DateTime?>("CourseEndDateTime");

                    b.Property<string>("CourseNo");

                    b.Property<decimal?>("CoursePrice");

                    b.Property<int?>("CourseStatus");

                    b.Property<string>("CourseTimeSlot");

                    b.Property<int?>("CourseType");

                    b.Property<DateTime?>("CreateDateTime");

                    b.Property<string>("DrivingType");

                    b.Property<int?>("GPSID");

                    b.Property<int?>("HasAppointmentCount");

                    b.Property<bool?>("IsCancel");

                    b.Property<string>("PracticeArea");

                    b.Property<int>("SiteId");

                    b.Property<int?>("TeacherId");

                    b.Property<string>("VehicleNo");

                    b.HasKey("Id");

                    b.ToTable("Tb_ReleaseCourse");
                });

            modelBuilder.Entity("JPGZService.SchoolSubjects.SchoolSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("DeleteMark");

                    b.Property<int?>("DrivingType");

                    b.Property<double?>("MaxStudyTime");

                    b.Property<double?>("MinMilage");

                    b.Property<double?>("MinStudyTime");

                    b.Property<int?>("MonitorTime");

                    b.Property<double?>("Numerical");

                    b.Property<double?>("StudyRate");

                    b.Property<double?>("StudyRate_Operate");

                    b.Property<double?>("StudyRate_Simulate");

                    b.Property<double?>("StudyRate_Theoretical");

                    b.Property<int?>("SubjectId");

                    b.Property<double?>("SyllabusMil");

                    b.Property<double?>("SyllabusTime");

                    b.Property<double?>("SyllabusTime_Operate");

                    b.Property<double?>("SyllabusTime_Simulate");

                    b.Property<double?>("SyllabusTime_Theoretical");

                    b.HasKey("Id");

                    b.ToTable("tb_SchoolSubjects");
                });

            modelBuilder.Entity("JPGZService.Sites.Site", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchSchoolId");

                    b.Property<int?>("DriveSchoolId");

                    b.Property<string>("Latitude");

                    b.Property<string>("Longitude");

                    b.Property<string>("Name");

                    b.Property<int?>("SiteType");

                    b.HasKey("Id");

                    b.ToTable("tb_Site");
                });

            modelBuilder.Entity("JPGZService.StudentBases.StudentBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActiveTime");

                    b.Property<DateTime?>("AddTime");

                    b.Property<int?>("AddUserId");

                    b.Property<int?>("Age");

                    b.Property<string>("ApprovalOpinion");

                    b.Property<int?>("Batch");

                    b.Property<string>("Birthday");

                    b.Property<int?>("BranchSchoolId");

                    b.Property<int?>("BusitType");

                    b.Property<int?>("ChannelId");

                    b.Property<int?>("CheckResult");

                    b.Property<int?>("ClassId");

                    b.Property<int?>("ClassInfoId");

                    b.Property<string>("Company");

                    b.Property<string>("ContractAddress");

                    b.Property<int?>("DataOrganizeID");

                    b.Property<bool?>("DeleteMark");

                    b.Property<string>("Description");

                    b.Property<int?>("DriveSchoolId");

                    b.Property<int?>("DriveType");

                    b.Property<string>("DriveTypeName");

                    b.Property<DateTime?>("DrivingLicenseOfMaturity");

                    b.Property<string>("FamilyAddress");

                    b.Property<string>("FingerPrint1");

                    b.Property<string>("FingerPrint2");

                    b.Property<string>("FingerPrint3");

                    b.Property<string>("FingerPrint4");

                    b.Property<string>("FingerprintId");

                    b.Property<DateTime?>("Fstdrilicdate");

                    b.Property<DateTime?>("GeaduateDate");

                    b.Property<string>("Gid");

                    b.Property<int?>("GpsId");

                    b.Property<string>("GraduateNo");

                    b.Property<int?>("HouseholdType");

                    b.Property<string>("ICCardNo");

                    b.Property<string>("IDCardNo");

                    b.Property<string>("Landline");

                    b.Property<int?>("MakeStatus");

                    b.Property<string>("Mobilephone");

                    b.Property<string>("Name");

                    b.Property<string>("Nationality");

                    b.Property<string>("Native");

                    b.Property<int?>("NativeType");

                    b.Property<int?>("OperationState");

                    b.Property<string>("OriginalDrivingLicenseNo");

                    b.Property<int?>("PAIjInsurance");

                    b.Property<int?>("PaType");

                    b.Property<string>("Password");

                    b.Property<string>("PhotoId");

                    b.Property<string>("Pic");

                    b.Property<int?>("RecordType");

                    b.Property<int?>("RegType");

                    b.Property<DateTime?>("RegisterDate");

                    b.Property<int?>("RegisterPlace");

                    b.Property<DateTime?>("Rowver");

                    b.Property<string>("S_PrintStuCard");

                    b.Property<int?>("SeforeStudyVehicleType");

                    b.Property<int?>("Sex");

                    b.Property<int?>("SiteId");

                    b.Property<int?>("Status");

                    b.Property<string>("StudentCardNo");

                    b.Property<string>("Stunum");

                    b.Property<int?>("TeacherId");

                    b.Property<string>("TemporaryRP");

                    b.Property<DateTime?>("TemporaryRPDate");

                    b.Property<int?>("TheoryState");

                    b.Property<string>("TrainingContractScan");

                    b.Property<string>("UID");

                    b.Property<int?>("UploadStatus");

                    b.HasKey("Id");

                    b.ToTable("tb_Student_Base");
                });

            modelBuilder.Entity("JPGZService.StudentBlackLists.StudentBlackList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddCount");

                    b.Property<DateTime?>("AddTime");

                    b.Property<DateTime?>("DeleteTime");

                    b.Property<int?>("IsDelete");

                    b.Property<string>("Reason");

                    b.Property<int?>("StudentId");

                    b.HasKey("Id");

                    b.ToTable("tb_StudentBlackList");
                });

            modelBuilder.Entity("JPGZService.StudyRecordResults.StudyRecordResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("ActualTime");

                    b.Property<DateTime?>("BeginTime");

                    b.Property<int?>("CalcFlag");

                    b.Property<string>("ClassId");

                    b.Property<string>("Coachnum");

                    b.Property<bool?>("DeleteMark");

                    b.Property<int?>("DriveSchoolId");

                    b.Property<string>("DriveSchoolName");

                    b.Property<DateTime?>("EndTime");

                    b.Property<int?>("GpsId");

                    b.Property<bool?>("HasAnalysed");

                    b.Property<bool?>("HasCalcBlindspot");

                    b.Property<bool?>("HasCalcMileage");

                    b.Property<bool?>("HasCalcVehStatus");

                    b.Property<int?>("HasStat");

                    b.Property<bool?>("IsManual");

                    b.Property<int?>("MaxSpeed");

                    b.Property<double?>("Mileage");

                    b.Property<double?>("RealTime");

                    b.Property<string>("Recnum");

                    b.Property<string>("StudentCardNo");

                    b.Property<int?>("StudentId");

                    b.Property<double?>("StudyMile");

                    b.Property<decimal?>("StudyRate");

                    b.Property<int?>("StudyType");

                    b.Property<string>("Stunum");

                    b.Property<int?>("SubjectID");

                    b.Property<int?>("TeacherId");

                    b.Property<string>("TeacherName");

                    b.Property<string>("TecCardNo");

                    b.Property<string>("TrainingPrograms");

                    b.Property<int?>("UploadFlag");

                    b.Property<bool?>("UploadPhotos");

                    b.Property<int?>("UploadStatus");

                    b.Property<DateTime?>("UploadTime");

                    b.Property<double?>("ValidActualTime");

                    b.Property<bool?>("ValidBlindspot");

                    b.Property<int?>("ValidFlag");

                    b.Property<bool?>("ValidSpeed");

                    b.Property<bool?>("ValidVehStatus");

                    b.Property<string>("VehicleNo");

                    b.HasKey("Id");

                    b.ToTable("tb_StudyRecord_Result");
                });

            modelBuilder.Entity("JPGZService.StudyStatQuerys.StudyStatQuery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BInNewApply");

                    b.Property<DateTime?>("LastStudyTime");

                    b.Property<double?>("S3mileage");

                    b.Property<int?>("StudentId");

                    b.Property<double?>("Subject1Theory");

                    b.Property<double?>("Subject1ToTalAmt");

                    b.Property<double?>("Subject1_OnlineLearning");

                    b.Property<double?>("Subject2Operate");

                    b.Property<double?>("Subject2Simulate");

                    b.Property<double?>("Subject2Theory");

                    b.Property<double?>("Subject2ToTalAmt");

                    b.Property<double?>("Subject2_OnlineLearning");

                    b.Property<double?>("Subject3Operate");

                    b.Property<double?>("Subject3Simulate");

                    b.Property<double?>("Subject3Theory");

                    b.Property<double?>("Subject3ToTalAmt");

                    b.Property<double?>("Subject3_OnlineLearning");

                    b.Property<double?>("Subject4Theory");

                    b.Property<double?>("Subject4ToTalAmt");

                    b.Property<double?>("Subject4_OnlineLearning");

                    b.HasKey("Id");

                    b.ToTable("tb_StudyStat_Query");
                });

            modelBuilder.Entity("JPGZService.StudyStat_Student.tb_StudyStat_Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("ActualTime");

                    b.Property<double?>("InvalidActualTime");

                    b.Property<double?>("RealTime");

                    b.Property<int?>("StudentId");

                    b.Property<double?>("StudyRate");

                    b.Property<int?>("StudyType");

                    b.Property<int?>("SubjectId");

                    b.Property<double?>("ValidActualTime");

                    b.Property<int?>("ValidStudyTimeExam");

                    b.HasKey("Id");

                    b.ToTable("tb_StudyStat_Student");
                });

            modelBuilder.Entity("JPGZService.StudyTimes.StudyTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DriveType");

                    b.Property<string>("DriveTypeName");

                    b.Property<string>("IDCardNo");

                    b.Property<int?>("Part1SUMHours");

                    b.Property<int?>("Part1SUMValidHours");

                    b.Property<double?>("Part1SurplusHours");

                    b.Property<int?>("Part2SUMHours");

                    b.Property<int?>("Part2SUMValidHours");

                    b.Property<double?>("Part2SurplusHours");

                    b.Property<int?>("Part3SUMHours");

                    b.Property<int?>("Part3SUMValidHours");

                    b.Property<double?>("Part3SurplusHours");

                    b.Property<int?>("Part4SUMHours");

                    b.Property<int?>("Part4SUMValidHours");

                    b.Property<double?>("Part4SurplusHours");

                    b.Property<int?>("StudentId");

                    b.HasKey("Id");

                    b.ToTable("V_StudyTime");
                });

            modelBuilder.Entity("JPGZService.SurplusStudyTimes.SurplusStudyTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Part1SUMHours");

                    b.Property<double?>("Part1SurplusHours");

                    b.Property<double?>("Part2SUMHours");

                    b.Property<double?>("Part2SurplusHours");

                    b.Property<double?>("Part3SUMHours");

                    b.Property<double?>("Part3SurplusHours");

                    b.Property<double?>("Part4SUMHours");

                    b.Property<double?>("Part4SurplusHours");

                    b.Property<int?>("StudentId");

                    b.HasKey("Id");

                    b.ToTable("tb_SurplusStudyTime");
                });

            modelBuilder.Entity("JPGZService.TeacherLeaves.TeacherLeave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<int?>("IsPushInfo");

                    b.Property<string>("LeaveCause");

                    b.Property<string>("LeaveCourseIds");

                    b.Property<string>("OperateMan");

                    b.Property<int?>("TeacherId");

                    b.Property<float?>("TimeToLeave");

                    b.HasKey("Id");

                    b.ToTable("Tb_TeacherLeave");
                });

            modelBuilder.Entity("JPGZService.TeacherTemplates.TeacherTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddType");

                    b.Property<int?>("AppRange");

                    b.Property<string>("BeginTime");

                    b.Property<int?>("CanAppCount");

                    b.Property<string>("CarType");

                    b.Property<string>("ClassIDS");

                    b.Property<DateTime?>("CreateTime");

                    b.Property<int?>("DetailSubjectID");

                    b.Property<int?>("DriveSchoolID");

                    b.Property<string>("EndTime");

                    b.Property<int?>("IntervalTime");

                    b.Property<int?>("IsPush");

                    b.Property<int?>("Isdefault");

                    b.Property<int?>("PayPath");

                    b.Property<int?>("SiteId");

                    b.Property<decimal?>("StandardPrice");

                    b.Property<int?>("SubjectID");

                    b.Property<int?>("TeaOrGroupID");

                    b.Property<string>("TemplateName");

                    b.HasKey("Id");

                    b.ToTable("tb_teacherTemplate");
                });

            modelBuilder.Entity("JPGZService.Teachers.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActionType");

                    b.Property<DateTime?>("AddTime");

                    b.Property<int?>("AddUserId");

                    b.Property<string>("Address");

                    b.Property<DateTime?>("BeginCardDate");

                    b.Property<DateTime?>("BeginDate");

                    b.Property<string>("Beian");

                    b.Property<DateTime?>("Birthday");

                    b.Property<int?>("BranchSchoolId");

                    b.Property<int?>("CarType");

                    b.Property<string>("CarTypeName");

                    b.Property<int>("CoachRole");

                    b.Property<string>("Coachnum");

                    b.Property<string>("ContractNo");

                    b.Property<int?>("DataOrganizeID");

                    b.Property<bool?>("DeleteMark");

                    b.Property<string>("Description");

                    b.Property<string>("DriveCardNo");

                    b.Property<int?>("DriveSchoolId");

                    b.Property<string>("DriveVehicleType");

                    b.Property<string>("DriveYear");

                    b.Property<int?>("EducationBg");

                    b.Property<int>("Employstatus");

                    b.Property<DateTime?>("EndDate");

                    b.Property<string>("FingerPrint1");

                    b.Property<string>("FingerPrint2");

                    b.Property<string>("FingerPrint3");

                    b.Property<string>("FingerPrint4");

                    b.Property<string>("FingerprintId");

                    b.Property<DateTime?>("FireDate");

                    b.Property<int?>("Gpsid");

                    b.Property<DateTime?>("HireEndDate");

                    b.Property<DateTime?>("HireStartDate");

                    b.Property<string>("ICCardNo");

                    b.Property<string>("IDCardNo");

                    b.Property<string>("Mobilephone");

                    b.Property<string>("Occupationno");

                    b.Property<int?>("OperationState");

                    b.Property<string>("PaType");

                    b.Property<string>("PassWord");

                    b.Property<string>("PhotoId");

                    b.Property<int?>("Sex");

                    b.Property<int?>("Status");

                    b.Property<int?>("StatusUserId");

                    b.Property<int?>("TeachCarType");

                    b.Property<string>("TeachPaNo");

                    b.Property<string>("TeachYear");

                    b.Property<string>("TeacherCardNo");

                    b.Property<string>("TeacherName");

                    b.Property<int?>("TeacherType");

                    b.Property<string>("TecCardNo");

                    b.Property<int?>("TechGrade");

                    b.Property<string>("TechPic");

                    b.Property<string>("TechVehicleType");

                    b.Property<int?>("TheoryState");

                    b.Property<int>("TrainingStatus");

                    b.Property<string>("UID");

                    b.Property<int>("UploadStatus");

                    b.HasKey("Id");

                    b.ToTable("tb_Teacher");
                });

            modelBuilder.Entity("JPGZService.TeachingAreas.TeachingArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<decimal?>("Area");

                    b.Property<int?>("Curvehnum");

                    b.Property<int?>("DriveSchoolId");

                    b.Property<string>("DriveSchoolName");

                    b.Property<int>("Flag");

                    b.Property<string>("GpsCoordinates");

                    b.Property<string>("Latitude");

                    b.Property<string>("Longitude");

                    b.Property<string>("Name");

                    b.Property<string>("Polygon");

                    b.Property<string>("Reason");

                    b.Property<int?>("TAType");

                    b.Property<int?>("Totalvehnum");

                    b.Property<string>("UploadStatus");

                    b.Property<string>("VehicleType");

                    b.Property<string>("polygonGuid");

                    b.Property<string>("seq");

                    b.HasKey("Id");

                    b.ToTable("tb_TeachingArea");
                });

            modelBuilder.Entity("JPGZService.TrainCurriculum.TrainCurriculumModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Accessper");

                    b.Property<DateTime?>("AddTime");

                    b.Property<string>("Author");

                    b.Property<double?>("Changing");

                    b.Property<string>("Curriculum");

                    b.Property<int?>("CurriculumType");

                    b.Property<double?>("Duration");

                    b.Property<string>("ImagePath");

                    b.Property<string>("Intcurriculum");

                    b.Property<int?>("IsDelete");

                    b.Property<DateTime?>("Learningper");

                    b.Property<string>("SubjCode");

                    b.Property<int?>("Subject");

                    b.Property<int?>("TrainType");

                    b.Property<string>("TrainTypeName");

                    b.HasKey("Id");

                    b.ToTable("tb_TrainCurriculum");
                });

            modelBuilder.Entity("JPGZService.VehicleBrandModels.VehicleBrandModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("JG_Id");

                    b.Property<string>("ManufacturerName");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentId");

                    b.HasKey("Id");

                    b.ToTable("tb_VehicleBrandModel");
                });

            modelBuilder.Entity("JPGZService.Vehicles.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AddTime");

                    b.Property<int?>("AddUserId");

                    b.Property<int?>("BandID");

                    b.Property<int>("Beian");

                    b.Property<int?>("BranchSchoolId");

                    b.Property<string>("BusinessScope");

                    b.Property<DateTime?>("BuyDate");

                    b.Property<double?>("BuyMoney");

                    b.Property<string>("Carnum");

                    b.Property<int?>("ColorID");

                    b.Property<int>("DataOrganizeID");

                    b.Property<bool>("DeleteMark");

                    b.Property<string>("Description");

                    b.Property<int?>("DriveSchoolId");

                    b.Property<string>("DrivingLicenseNo");

                    b.Property<int?>("EnergyType");

                    b.Property<string>("EngineModel");

                    b.Property<string>("EngineNo");

                    b.Property<double?>("ExhaustEmissions");

                    b.Property<DateTime?>("FactoryDate");

                    b.Property<string>("FrameNo");

                    b.Property<int?>("GpsId");

                    b.Property<int?>("KindID");

                    b.Property<double?>("LoadingCapacity");

                    b.Property<int>("Manufactory");

                    b.Property<string>("OperatingLicensesNo");

                    b.Property<DateTime?>("OperationsDate");

                    b.Property<int?>("OperationsType");

                    b.Property<string>("PhotoId");

                    b.Property<int?>("PlateColor");

                    b.Property<string>("QualificationNo");

                    b.Property<string>("RegAddress");

                    b.Property<int?>("SeatCount");

                    b.Property<int?>("Structure");

                    b.Property<int?>("TrainSiteId");

                    b.Property<int>("UploadStatus");

                    b.Property<int?>("Usage");

                    b.Property<string>("VehicleNo");

                    b.Property<string>("VehicleTiainType");

                    b.Property<string>("Vpicture");

                    b.Property<double?>("Vweight");

                    b.Property<int?>("WorkStatus");

                    b.HasKey("Id");

                    b.ToTable("tb_Vehicle");
                });

            modelBuilder.Entity("JPGZService.Videos.Study_Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassId");

                    b.Property<int?>("EventType");

                    b.Property<int?>("GpsId");

                    b.Property<string>("PhotoId");

                    b.Property<string>("PhotoPathName");

                    b.Property<int>("PhotoSource");

                    b.Property<DateTime>("PhotoTime");

                    b.Property<string>("Stunum");

                    b.Property<int>("UploadStatus");

                    b.Property<DateTime>("UploadTime");

                    b.HasKey("Id");

                    b.ToTable("td_Study_Photo");
                });

            modelBuilder.Entity("JPGZService.Videos.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Accessper");

                    b.Property<DateTime?>("AddTime");

                    b.Property<string>("Author");

                    b.Property<double?>("Changing");

                    b.Property<string>("CoursePath");

                    b.Property<string>("Courseware");

                    b.Property<string>("CoursewareCode");

                    b.Property<int?>("CoursewareType");

                    b.Property<int?>("CurriculumId");

                    b.Property<double?>("Duration");

                    b.Property<string>("ImagePath");

                    b.Property<string>("IntCourseware");

                    b.Property<int?>("IsDelete");

                    b.HasKey("Id");

                    b.ToTable("tb_Video");
                });

            modelBuilder.Entity("JPGZService.Videos.VideoRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("PlayTime");

                    b.Property<int>("StudentId");

                    b.Property<int?>("StudyRecordResultId");

                    b.Property<int>("Subject");

                    b.Property<string>("TrainType");

                    b.Property<int>("UserId");

                    b.Property<int>("VideoId");

                    b.HasKey("Id");

                    b.ToTable("tb_Video_Record");
                });

            modelBuilder.Entity("JPGZService.Videos.Video_EvaluationInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("EvaluateTime");

                    b.Property<int?>("Overall");

                    b.Property<string>("Srvmanner");

                    b.Property<string>("Teachlevel");

                    b.Property<int?>("UserId");

                    b.Property<int?>("VideoId");

                    b.HasKey("Id");

                    b.ToTable("tb_Video_Evaluation");
                });

            modelBuilder.Entity("JPGZService.Videos.Video_PlayCountInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PlayCount");

                    b.Property<int?>("VideoId");

                    b.HasKey("Id");

                    b.ToTable("tb_Video_PlayCount");
                });
#pragma warning restore 612, 618
        }
    }
}
